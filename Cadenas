#include <stdio.h>

#define TAM_CAD 80
#define TAM_ARR 12

typedef char  Cadena [TAM_CAD];
typedef Cadena ArrCadena[TAM_ARR];

void LeeCadena (Cadena, int);
int ContarPalabras (Cadena);
void CargarArrCadenaOrdenado(ArrCadena, int*);
void MostarArrCadena(ArrCadena, int);


int main(){
    ArrCadena lista;
    int tam;
    CargarArrCadena(lista, &tam);
    MostarArrCadena(lista, tam);
    return 0;
}

void LeeCadena(Cadena cad, int tam){
    int j;
    char c;
    j = 0;
    c = getchar();
    while (j<tam-1 && c != '\n' && c != EOF){
        cad[j] = c;
        j++;
        c = getchar();
    }
    cad[j] = '\0';
    j = 0;
    while (c != '\n' && c != EOF){
        j++;
        c = getchar();
    }
}

/*strcmp(c1, c2) retorna 1 si c1>c2, 0 si c1==c2 o -1 si c1<c2 
ej strcmp(andres, andrea) = 1  andres>andrea*/

int ContarPalabras (Cadena cad){
    int contador;
    int i;
    int tam;
    tam = strlen(cad);
    contador = 0;
    for (i = 0; i < tam; i++){
        if (cad[i]==' ' && cad[i-1]!=' '){
            contador ++;
        }
    }
    if (cad[i-1] != ' '){
        contador++;
    }
    return contador;
}

void CargarArrCadenaOrdeando(ArrCadena lista, int* tam){
    int i;
    int cantidad;
    printf("\nIngrese cantidad a cargar: \n");
    scanf("%d", &cantidad);
    fflush(stdin);
    LeeCadena(lista[1], TAM_CAD);
    for (i = 2; i <= cantidad; i++){
        fflush(stdin);
        LeeCadena(lista[i], TAM_CAD);
    }
    *tam = cantidad;
}

void MostarArrCadena (ArrCadena lista, int tam){
    int i;
    for (i = 1; i <= tam; i++){
        printf("\nCadena %d: %s", i, lista[i]);
    }
}
